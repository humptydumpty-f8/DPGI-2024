//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp39
{
    using System;
    using System.Collections.Generic;
    
    public partial class EMPLOYEE
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public EMPLOYEE()
        {
            this.ACC_TRANSACTION = new HashSet<ACC_TRANSACTION>();
            this.ACCOUNT = new HashSet<ACCOUNT>();
            this.EMPLOYEE1 = new HashSet<EMPLOYEE>();
        }
    
        public int EMP_ID { get; set; }
        public Nullable<System.DateTime> END_DATE { get; set; }
        public string FIRST_NAME { get; set; }
        public string LAST_NAME { get; set; }
        public System.DateTime START_DATE { get; set; }
        public string TITLE { get; set; }
        public Nullable<int> ASSIGNED_BRANCH_ID { get; set; }
        public Nullable<int> DEPT_ID { get; set; }
        public Nullable<int> SUPERIOR_EMP_ID { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ACC_TRANSACTION> ACC_TRANSACTION { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ACCOUNT> ACCOUNT { get; set; }
        public virtual BRANCH BRANCH { get; set; }
        public virtual DEPARTMENT DEPARTMENT { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EMPLOYEE> EMPLOYEE1 { get; set; }
        public virtual EMPLOYEE EMPLOYEE2 { get; set; }
    }
}
